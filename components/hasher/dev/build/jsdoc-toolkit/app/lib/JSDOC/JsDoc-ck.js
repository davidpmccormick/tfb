/**
	@constructor
	@param [opt] Used to override the commandline options. Useful for testing.
	@version $Id: JsDoc.js 831 2010-03-09 14:24:56Z micmath $
*/JSDOC.JsDoc=function(e){e&&(JSDOC.opt=e);if(JSDOC.opt.h){JSDOC.usage();quit()}if(JSDOC.opt._.length==0){LOG.warn("No source files to work on. Nothing to do.");quit()}(JSDOC.opt.t===!0||JSDOC.opt.d===!0)&&JSDOC.usage();if(typeof JSDOC.opt.d=="string"){JSDOC.opt.d.charAt(JSDOC.opt.d.length-1).match(/[\\\/]/)||(JSDOC.opt.d=JSDOC.opt.d+"/");LOG.inform("Output directory set to '"+JSDOC.opt.d+"'.");IO.mkPath(JSDOC.opt.d)}JSDOC.opt.e&&IO.setEncoding(JSDOC.opt.e);typeof JSDOC.opt.r=="boolean"?JSDOC.opt.r=10:isNaN(parseInt(JSDOC.opt.r))?JSDOC.opt.r=1:JSDOC.opt.r=parseInt(JSDOC.opt.r);var t={};if(JSDOC.opt.D)for(var n=0;n<JSDOC.opt.D.length;n++){var r=JSDOC.opt.D[n];r.length>1&&r.charAt(0)=='"'&&r.charAt(r.length-1)=='"'&&(r=r.substr(1,r.length-2));var i=r.split(":");if(i&&i.length>1){for(var s=2;s<i.length;s++)i[1]+=":"+i[s];t[i[0]]=i[1]}}JSDOC.opt.D=t;if(defined(JSDOC.conf))for(var o in JSDOC.conf.D)defined(JSDOC.opt.D[o])||(JSDOC.opt.D[o]=JSDOC.conf.D[o]);defined(JSDOC.PluginManager)&&JSDOC.PluginManager.run("onInit",JSDOC.opt);JSDOC.opt.srcFiles=JSDOC.JsDoc._getSrcFiles();JSDOC.JsDoc._parseSrcFiles();JSDOC.JsDoc.symbolSet=JSDOC.Parser.symbols};JSDOC.JsDoc._getSrcFiles=function(){JSDOC.JsDoc.srcFiles=[];var e=["js"];JSDOC.opt.x&&(e=JSDOC.opt.x.split(",").map(function(e){return e.toLowerCase()}));for(var t=0;t<JSDOC.opt._.length;t++)JSDOC.JsDoc.srcFiles=JSDOC.JsDoc.srcFiles.concat(IO.ls(JSDOC.opt._[t],JSDOC.opt.r).filter(function(t){var n=t.split(".").pop().toLowerCase();if(JSDOC.opt.E)for(var r=0;r<JSDOC.opt.E.length;r++)if(t.match(new RegExp(JSDOC.opt.E[r]))){LOG.inform("Excluding "+t);return!1}return e.indexOf(n)>-1}));return JSDOC.JsDoc.srcFiles};JSDOC.JsDoc._parseSrcFiles=function(){JSDOC.Parser.init();for(var e=0,t=JSDOC.JsDoc.srcFiles.length;e<t;e++){var n=JSDOC.JsDoc.srcFiles[e];JSDOC.opt.v&&LOG.inform("Parsing file: "+n);try{var r=IO.readFile(n)}catch(i){LOG.warn("Can't read source file '"+n+"': "+i.message)}var s=new JSDOC.TokenReader,o=new JSDOC.TokenStream(s.tokenize(new JSDOC.TextStream(r)));JSDOC.Parser.parse(o,n)}JSDOC.Parser.finish();JSDOC.PluginManager&&JSDOC.PluginManager.run("onFinishedParsing",JSDOC.Parser.symbols)};