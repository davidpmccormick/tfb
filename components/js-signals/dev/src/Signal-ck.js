/*global SignalBinding:false*/// Signal --------------------------------------------------------
//================================================================
function validateListener(e,t){if(typeof e!="function")throw new Error("listener is a required param of {fn}() and should be a Function.".replace("{fn}",t))}function Signal(){this._bindings=[];this._prevParams=null;var e=this;this.dispatch=function(){Signal.prototype.dispatch.apply(e,arguments)}}Signal.prototype={VERSION:"::VERSION_NUMBER::",memorize:!1,_shouldPropagate:!0,active:!0,_registerListener:function(e,t,n,r){var i=this._indexOfListener(e,n),s;if(i!==-1){s=this._bindings[i];if(s.isOnce()!==t)throw new Error("You cannot add"+(t?"":"Once")+"() then add"+(t?"Once":"")+"() the same listener without removing the relationship first.")}else{s=new SignalBinding(this,e,t,n,r);this._addBinding(s)}this.memorize&&this._prevParams&&s.execute(this._prevParams);return s},_addBinding:function(e){var t=this._bindings.length;do--t;while(this._bindings[t]&&e._priority<=this._bindings[t]._priority);this._bindings.splice(t+1,0,e)},_indexOfListener:function(e,t){var n=this._bindings.length,r;while(n--){r=this._bindings[n];if(r._listener===e&&r.context===t)return n}return-1},has:function(e,t){return this._indexOfListener(e,t)!==-1},add:function(e,t,n){validateListener(e,"add");return this._registerListener(e,!1,t,n)},addOnce:function(e,t,n){validateListener(e,"addOnce");return this._registerListener(e,!0,t,n)},remove:function(e,t){validateListener(e,"remove");var n=this._indexOfListener(e,t);if(n!==-1){this._bindings[n]._destroy();this._bindings.splice(n,1)}return e},removeAll:function(){var e=this._bindings.length;while(e--)this._bindings[e]._destroy();this._bindings.length=0},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=!1},dispatch:function(e){if(!this.active)return;var t=Array.prototype.slice.call(arguments),n=this._bindings.length,r;this.memorize&&(this._prevParams=t);if(!n)return;r=this._bindings.slice();this._shouldPropagate=!0;do n--;while(r[n]&&this._shouldPropagate&&r[n].execute(t)!==!1)},forget:function(){this._prevParams=null},dispose:function(){this.removeAll();delete this._bindings;delete this._prevParams},toString:function(){return"[Signal active:"+this.active+" numListeners:"+this.getNumListeners()+"]"}};var signals=Signal;signals.Signal=Signal;