/*jshint onevar:false *///for node
var crossroads=crossroads||require("../../../dist/crossroads");describe("crossroads.create()",function(){afterEach(function(){crossroads.removeAllRoutes()});describe("new Router instance",function(){it("should work in new instances",function(){var e,t=crossroads.create();t.addRoute("/{foo}",function(t){e=t});t.parse("/lorem_ipsum");expect(e).toBe("lorem_ipsum")});it("shouldn't affect static instance",function(){var e,t=crossroads.create();t.addRoute("/{foo}",function(t){e=t});crossroads.addRoute("/{foo}",function(t){e="error!"});t.parse("/lorem_ipsum");expect(e).toBe("lorem_ipsum")});it("shouldn't be affected by static instance",function(){var e,t=crossroads.create();crossroads.addRoute("/{foo}",function(t){e=t});t.addRoute("/{foo}",function(t){e="error!"});crossroads.parse("/lorem_ipsum");expect(e).toBe("lorem_ipsum")});it("should allow a different lexer per router",function(){var e=crossroads.create(),t=0;e.patternLexer={getParamIds:function(){return["a","b"]},getOptionalParamsIds:function(){return[]},getParamValues:function(){return[123,456]},compilePattern:function(){return/foo-bar/}};var n=[],r=function(e,r){n[0]=e;n[1]=r;t++};e.addRoute("test",r);e.parse("foo-bar");expect(t).toEqual(1);expect(n).toEqual([123,456]);expect(e.patternLexer).not.toBe(crossroads.patternLexer)})})});