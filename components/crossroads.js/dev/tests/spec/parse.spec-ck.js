/*jshint onevar:false *///for node
var crossroads=crossroads||require("../../../dist/crossroads");describe("crossroads.parse()",function(){var e;beforeEach(function(){e=crossroads.shouldTypecast});afterEach(function(){crossroads.resetState();crossroads.removeAllRoutes();crossroads.routed.removeAll();crossroads.bypassed.removeAll();crossroads.shouldTypecast=e});describe("simple string route",function(){it("shold route basic strings",function(){var e=0;crossroads.addRoute("/foo",function(t){e++});crossroads.parse("/bar");crossroads.parse("/foo");crossroads.parse("foo");expect(e).toBe(2)});it("should pass params and allow multiple routes",function(){var e,t,n;crossroads.addRoute("/{foo}",function(t){e=t});crossroads.addRoute("/{foo}/{bar}",function(e,r){t=e;n=r});crossroads.parse("/lorem_ipsum");crossroads.parse("/maecennas/ullamcor");expect(e).toBe("lorem_ipsum");expect(t).toBe("maecennas");expect(n).toBe("ullamcor")});it("should dispatch matched signal",function(){var e,t,n,r=crossroads.addRoute("/{foo}");r.matched.add(function(t){e=t});var i=crossroads.addRoute("/{foo}/{bar}");i.matched.add(function(e,r){t=e;n=r});crossroads.parse("/lorem_ipsum");crossroads.parse("/maecennas/ullamcor");expect(e).toBe("lorem_ipsum");expect(t).toBe("maecennas");expect(n).toBe("ullamcor")});it("should handle a word separator that isn't necessarily /",function(){var e,t,n,r,i=crossroads.addRoute("/{foo}_{bar}");i.matched.add(function(n,r){e=n;t=r});var s=crossroads.addRoute("/{foo}-{bar}");s.matched.add(function(e,t){n=e;r=t});crossroads.parse("/lorem_ipsum");crossroads.parse("/maecennas-ullamcor");expect(e).toBe("lorem");expect(t).toBe("ipsum");expect(n).toBe("maecennas");expect(r).toBe("ullamcor")});it("should handle empty routes",function(){var e=0,t=crossroads.addRoute();t.matched.add(function(t,n){expect(t).toBeUndefined();expect(n).toBeUndefined();e++});crossroads.parse("/123/456");crossroads.parse("/maecennas/ullamcor");crossroads.parse("");expect(e).toBe(1)});it("should handle empty strings",function(){var e=0,t=crossroads.addRoute("");t.matched.add(function(t,n){expect(t).toBeUndefined();expect(n).toBeUndefined();e++});crossroads.parse("/123/456");crossroads.parse("/maecennas/ullamcor");crossroads.parse("");expect(e).toBe(1)});it("should route `null` as empty string",function(){var e=0,t=crossroads.addRoute("");t.matched.add(function(t,n){expect(t).toBeUndefined();expect(n).toBeUndefined();e++});crossroads.parse("/123/456");crossroads.parse("/maecennas/ullamcor");crossroads.parse();expect(e).toBe(1)})});describe("optional params",function(){it("should capture optional params",function(){var e=0,t=crossroads.addRoute("foo/:lorem:/:ipsum:/:dolor:/:sit:");t.matched.add(function(t,n,r,i){expect(t).toBe("lorem");expect(n).toBe("123");expect(r).toBe("true");expect(i).toBe("false");e++});crossroads.parse("foo/lorem/123/true/false");expect(e).toBe(1)});it("should only pass matched params",function(){var e=0,t=crossroads.addRoute("foo/:lorem:/:ipsum:/:dolor:/:sit:");t.matched.add(function(t,n,r,i){expect(t).toBe("lorem");expect(n).toBe("123");expect(r).toBeUndefined();expect(i).toBeUndefined();e++});crossroads.parse("foo/lorem/123");expect(e).toBe(1)})});describe("regex route",function(){it("should capture groups",function(){var e=0,t=crossroads.addRoute(/^\/[0-9]+\/([0-9]+)$/);t.matched.add(function(t,n){expect(t).toBe("456");expect(n).toBeUndefined();e++});crossroads.parse("/123/456");crossroads.parse("/maecennas/ullamcor");expect(e).toBe(1)});it("should capture even empty groups",function(){var e=0,t=crossroads.addRoute(/^\/()\/([0-9]+)$/);t.matched.add(function(t,n){expect(t).toBe("");expect(n).toBe("456");e++});crossroads.parse("//456");expect(e).toBe(1)})});describe("typecast values",function(){it("should typecast values if shouldTypecast is set to true",function(){crossroads.shouldTypecast=!0;var e=0,t=crossroads.addRoute("{a}/{b}/{c}/{d}/{e}/{f}");t.matched.add(function(t,n,r,i,s,o){expect(t).toBe("lorem");expect(n).toBe(123);expect(r).toBe(!0);expect(i).toBe(!1);expect(s).toBe(null);expect(o).toBe(undefined);e++});crossroads.parse("lorem/123/true/false/null/undefined");expect(e).toBe(1)});it("should not typecast if shouldTypecast is set to false",function(){crossroads.shouldTypecast=!1;var e=0,t=crossroads.addRoute("{lorem}/{ipsum}/{dolor}/{sit}");t.matched.add(function(t,n,r,i){expect(t).toBe("lorem");expect(n).toBe("123");expect(r).toBe("true");expect(i).toBe("false");e++});crossroads.parse("lorem/123/true/false");expect(e).toBe(1)})});describe("rules.normalize_",function(){it("should normalize params before dispatching signal",function(){var e,t,n,r,i,s,o,u,a=crossroads.addRoute("{a}/{b}/:c:/:d:");a.rules={a:["news","article"],b:/[\-0-9a-zA-Z]+/,request_:/\/[0-9]+\/|$/,normalize_:function(e,t){var n,r=/^[0-9]+$/;t.a==="article"?n=t.c:r.test(t.b)?n=t.b:r.test(t.c)&&(n=t.c);return["news",n]}};a.matched.addOnce(function(n,r){e=n;t=r});crossroads.parse("news/111/lorem-ipsum");a.matched.addOnce(function(e,t){n=e;r=t});crossroads.parse("news/foo/222/lorem-ipsum");a.matched.addOnce(function(e,t){i=e;s=t});crossroads.parse("news/333");a.matched.addOnce(function(e,t){o=e;u=t});crossroads.parse("article/news/444");expect(e).toBe("news");expect(t).toBe("111");expect(n).toBe("news");expect(r).toBe("222");expect(i).toBe("news");expect(s).toBe("333");expect(o).toBe("news");expect(u).toBe("444")})});describe("crossroads.normalizeFn",function(){var e;beforeEach(function(){e=crossroads.normalizeFn});afterEach(function(){crossroads.normalizeFn=e});it("should work as a default normalize_",function(){var e,t,n,r,i,s,o,u;crossroads.normalizeFn=function(e,t){var n,r=/^[0-9]+$/;t.a==="article"?n=t.c:r.test(t.b)?n=t.b:r.test(t.c)&&(n=t.c);return["news",n]};var a=crossroads.addRoute("news/{b}/:c:/:d:");a.matched.addOnce(function(n,r){e=n;t=r});crossroads.parse("news/111/lorem-ipsum");var f=crossroads.addRoute("{a}/{b}/:c:/:d:");f.rules={a:["news","article"],b:/[\-0-9a-zA-Z]+/,request_:/\/[0-9]+\/|$/,normalize_:function(e,t){return["foo",t.b]}};f.matched.addOnce(function(e,t){n=e;r=t});crossroads.parse("article/333");expect(e).toBe("news");expect(t).toBe("111");expect(n).toBe("foo");expect(r).toBe("333")});it("should receive all values as an array on the special property `vals_`",function(){var e,t;crossroads.normalizeFn=function(e,t){return[t.vals_]};crossroads.addRoute("/{a}/{b}",function(t){e=t});crossroads.addRoute("/{a}",function(e){t=e});crossroads.parse("/foo/bar");crossroads.parse("/foo");expect(e.join(";")).toEqual(["foo","bar"].join(";"));expect(t.join(";")).toEqual(["foo"].join(";"))});describe("NORM_AS_ARRAY",function(){it("should pass array",function(){var e;crossroads.normalizeFn=crossroads.NORM_AS_ARRAY;crossroads.addRoute("/{a}/{b}",function(t){e=t});crossroads.parse("/foo/bar");expect({}.toString.call(e)).toEqual("[object Array]");expect(e[0]).toEqual("foo");expect(e[1]).toEqual("bar")})});describe("NORM_AS_OBJECT",function(){it("should pass object",function(){var e;crossroads.normalizeFn=crossroads.NORM_AS_OBJECT;crossroads.addRoute("/{a}/{b}",function(t){e=t});crossroads.parse("/foo/bar");expect(e.a).toEqual("foo");expect(e.b).toEqual("bar")})});describe("normalizeFn = null",function(){it("should pass multiple args",function(){var e,t;crossroads.normalizeFn=null;crossroads.addRoute("/{a}/{b}",function(n,r){e=n;t=r});crossroads.parse("/foo/bar");expect(e).toEqual("foo");expect(t).toEqual("bar")})})});describe("priority",function(){it("should enforce match order",function(){var e=0,t=crossroads.addRoute("/{foo}/{bar}");t.matched.add(function(e,t){throw new Error("shouldn't match but matched "+e+" "+t)});var n=crossroads.addRoute("/{foo}/{bar}",null,1);n.matched.add(function(t,n){expect(t).toBe("123");expect(n).toBe("456");e++});crossroads.parse("/123/456");expect(e).toBe(1)});it("shouldnt matter if there is a gap between priorities",function(){var e=0,t=crossroads.addRoute("/{foo}/{bar}",function(e,t){throw new Error("shouldn't match but matched "+e+" "+t)},4),n=crossroads.addRoute("/{foo}/{bar}",function(t,n){expect(t).toBe("123");expect(n).toBe("456");e++},999);crossroads.parse("/123/456");expect(e).toBe(1)})});describe("validate params before dispatch",function(){it("should ignore routes that don't validate",function(){var e="",t="{foo}-{bar}",n=crossroads.addRoute(t);n.matched.add(function(t,n){expect(t).toBe("lorem");expect(n).toBe("123");e+="a"});n.rules={foo:/\w+/,bar:function(e,t,n){return t==="lorem-123"}};var r=crossroads.addRoute(t);r.matched.add(function(t,n){expect(t).toBe("123");expect(n).toBe("ullamcor");e+="b"});r.rules={foo:["123","456","567","2"],bar:/ullamcor/};crossroads.parse("45-ullamcor");crossroads.parse("123-ullamcor");crossroads.parse("lorem-123");crossroads.parse("lorem-555");expect(e).toBe("ba")});it("should consider invalid rules as not matching",function(){var e="{foo}-{bar}",t=crossroads.addRoute(e);t.matched.add(function(e,t){throw new Error("first route was matched when it should not have been")});t.rules={foo:"lorem",bar:123};var n=crossroads.addRoute(e);n.matched.add(function(e,t){throw new Error("second route was matched when it should not have been")});n.rules={foo:!1,bar:void 0};crossroads.parse("45-ullamcor");crossroads.parse("lorem-123")})});describe("greedy routes",function(){it("should match multiple greedy routes",function(){var e,t,n,r,i,s,o,u,a=crossroads.addRoute("/{a}/{b}/",function(n,r){e=n;t=r});a.greedy=!1;var f=crossroads.addRoute("/bar/{b}/",function(e,t){n=e;r=t});f.greedy=!0;var l=crossroads.addRoute("/foo/{b}/",function(e,t){i=e;s=t});l.greedy=!0;var c=crossroads.addRoute("/{a}/:b:/",function(e,t){o=e;u=t});c.greedy=!0;crossroads.parse("/foo/lorem");expect(e).toEqual("foo");expect(t).toEqual("lorem");expect(n).toBeUndefined();expect(r).toBeUndefined();expect(i).toEqual("lorem");expect(s).toBeUndefined();expect(o).toEqual("foo");expect(u).toEqual("lorem")});it("should allow global greedy setting",function(){var e,t,n,r,i,s,o,u;crossroads.greedy=!0;var a=crossroads.addRoute("/{a}/{b}/",function(n,r){e=n;t=r}),f=crossroads.addRoute("/bar/{b}/",function(e,t){n=e;r=t}),l=crossroads.addRoute("/foo/{b}/",function(e,t){i=e;s=t}),c=crossroads.addRoute("/{a}/:b:/",function(e,t){o=e;u=t});crossroads.parse("/foo/lorem");expect(e).toEqual("foo");expect(t).toEqual("lorem");expect(n).toBeUndefined();expect(r).toBeUndefined();expect(i).toEqual("lorem");expect(s).toBeUndefined();expect(o).toEqual("foo");expect(u).toEqual("lorem");crossroads.greedy=!1});describe("greedyEnabled",function(){afterEach(function(){crossroads.greedyEnabled=!0});it("should toggle greedy behavior",function(){crossroads.greedyEnabled=!1;var e,t,n,r,i,s,o,u,a=crossroads.addRoute("/{a}/{b}/",function(n,r){e=n;t=r});a.greedy=!1;var f=crossroads.addRoute("/bar/{b}/",function(e,t){n=e;r=t});f.greedy=!0;var l=crossroads.addRoute("/foo/{b}/",function(e,t){i=e;s=t});l.greedy=!0;var c=crossroads.addRoute("/{a}/:b:/",function(e,t){o=e;u=t});c.greedy=!0;crossroads.parse("/foo/lorem");expect(e).toEqual("foo");expect(t).toEqual("lorem");expect(n).toBeUndefined();expect(r).toBeUndefined();expect(i).toBeUndefined();expect(s).toBeUndefined();expect(o).toBeUndefined();expect(u).toBeUndefined()})})});describe("default arguments",function(){it("should pass default arguments to all signals",function(){var e,t,n,r,i,s,o,u;crossroads.addRoute("foo",function(n,r){e=n;t=r});crossroads.bypassed.add(function(e,t,s){n=e;r=t;i=s});crossroads.routed.add(function(e,t,n){s=e;o=t;u=n});crossroads.parse("foo",[123,"dolor"]);crossroads.parse("bar",["ipsum",123]);expect(e).toEqual(123);expect(t).toEqual("dolor");expect(n).toEqual("ipsum");expect(r).toEqual(123);expect(i).toEqual("bar");expect(s).toEqual(123);expect(o).toEqual("dolor");expect(u).toEqual("foo")})});describe("rest params",function(){it("should pass rest as a single argument",function(){var e,t,n,r,i,s,o,u,a,f=crossroads.addRoute("{a}/{b}/:c*:");f.rules={a:["news","article"],b:/[\-0-9a-zA-Z]+/,"c*":["foo/bar","edit","123/456/789"]};f.matched.addOnce(function(r,i,s){e=r;t=i;n=s});crossroads.parse("article/333");expect(e).toBe("article");expect(t).toBe("333");expect(n).toBeUndefined();f.matched.addOnce(function(e,t,n){r=e;i=t;s=n});crossroads.parse("news/456/foo/bar");expect(r).toBe("news");expect(i).toBe("456");expect(s).toBe("foo/bar");f.matched.addOnce(function(e,t,n){o=e;u=t;a=n});crossroads.parse("news/456/123/aaa/bbb");expect(o).toBeUndefined();expect(u).toBeUndefined();expect(a).toBeUndefined()});it("should work in the middle of segment as well",function(){var e,t,n,r,i,s,o,u,a,f=crossroads.addRoute("{a}/{b*}/{c}");f.rules={a:["news","article"],c:["add","edit"]};f.matched.addOnce(function(r,i,s){e=r;t=i;n=s});crossroads.parse("article/333/add");expect(e).toBe("article");expect(t).toBe("333");expect(n).toBe("add");f.matched.addOnce(function(e,t,n){r=e;i=t;s=n});crossroads.parse("news/456/foo/bar/edit");expect(r).toBe("news");expect(i).toBe("456/foo/bar");expect(s).toBe("edit");f.matched.addOnce(function(e,t,n){o=e;u=t;a=n});crossroads.parse("news/456/123/aaa/bbb");expect(o).toBeUndefined();expect(u).toBeUndefined();expect(a).toBeUndefined()});it("should handle multiple rest params even though they dont make sense",function(){var e=0,t=crossroads.addRoute("{a}/{b*}/{c*}/{d}");t.rules={a:["news","article"]};t.matched.add(function(t,n,r,i){expect(r).toBe("the");expect(i).toBe("end");e++});crossroads.parse("news/456/foo/bar/this/the/end");crossroads.parse("news/456/foo/bar/this/is/crazy/long/the/end");crossroads.parse("article/weather/rain-tomorrow/the/end");expect(e).toBe(3)})});describe("query string",function(){describe("old syntax",function(){it("should only parse query string if using special capturing group",function(){var e=crossroads.addRoute("{a}?{q}#{hash}"),t,n,r;e.matched.addOnce(function(e,i,s){t=e;n=i;r=s});crossroads.parse("foo.php?foo=bar&lorem=123#bar");expect(t).toEqual("foo.php");expect(n).toEqual("foo=bar&lorem=123");expect(r).toEqual("bar")})});describe("required query string after required segment",function(){it("should parse query string into an object and typecast vals",function(){crossroads.shouldTypecast=!0;var e=crossroads.addRoute("{a}{?b}"),t,n;e.matched.addOnce(function(e,r){t=e;n=r});crossroads.parse("foo.php?lorem=ipsum&asd=123&bar=false");expect(t).toEqual("foo.php");expect(n).toEqual({lorem:"ipsum",asd:123,bar:!1})})});describe("required query string after optional segment",function(){it("should parse query string into an object and typecast vals",function(){crossroads.shouldTypecast=!0;var e=crossroads.addRoute(":a:{?b}"),t,n;e.matched.addOnce(function(e,r){t=e;n=r});crossroads.parse("foo.php?lorem=ipsum&asd=123&bar=false");expect(t).toEqual("foo.php");expect(n).toEqual({lorem:"ipsum",asd:123,bar:!1});var r,i;e.matched.addOnce(function(e,t){r=e;i=t});crossroads.parse("?lorem=ipsum&asd=123");expect(r).toBeUndefined();expect(i).toEqual({lorem:"ipsum",asd:123})})});describe("optional query string after required segment",function(){it("should parse query string into an object and typecast vals",function(){crossroads.shouldTypecast=!0;var e=crossroads.addRoute("{a}:?b:"),t,n;e.matched.addOnce(function(e,r){t=e;n=r});crossroads.parse("foo.php?lorem=ipsum&asd=123&bar=false");expect(t).toEqual("foo.php");expect(n).toEqual({lorem:"ipsum",asd:123,bar:!1});var r,i;e.matched.addOnce(function(e,t){r=e;i=t});crossroads.parse("bar.php");expect(r).toEqual("bar.php");expect(i).toBeUndefined()})});describe("optional query string after optional segment",function(){it("should parse query string into an object and typecast vals",function(){crossroads.shouldTypecast=!0;var e=crossroads.addRoute(":a::?b:"),t,n;e.matched.addOnce(function(e,r){t=e;n=r});crossroads.parse("foo.php?lorem=ipsum&asd=123&bar=false");expect(t).toEqual("foo.php");expect(n).toEqual({lorem:"ipsum",asd:123,bar:!1});var r,i;e.matched.addOnce(function(e,t){r=e;i=t});crossroads.parse("bar.php");expect(r).toEqual("bar.php");expect(i).toBeUndefined()})});describe("optional query string after required segment without typecasting",function(){it("should parse query string into an object and not typecast vals",function(){var e=crossroads.addRoute("{a}:?b:"),t,n;e.matched.addOnce(function(e,r){t=e;n=r});crossroads.parse("foo.php?lorem=ipsum&asd=123&bar=false");expect(t).toEqual("foo.php");expect(n).toEqual({lorem:"ipsum",asd:"123",bar:"false"})})})})});