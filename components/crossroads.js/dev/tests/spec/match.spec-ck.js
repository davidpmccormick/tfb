/*jshint onevar:false *///for node
var crossroads=crossroads||require("../../../dist/crossroads");describe("Match",function(){var e,t;beforeEach(function(){e=crossroads.shouldTypecast;t=crossroads.ignoreCase});afterEach(function(){crossroads.removeAllRoutes();crossroads.resetState();crossroads.shouldTypecast=e;crossroads.ignoreCase=t});it("should match simple string",function(){var e=crossroads.addRoute("/lorem-ipsum");expect(e.match("/lorem-ipsum")).toBe(!0);expect(e.match("/lorem-ipsum/")).toBe(!0);expect(e.match("/lorem-ipsum/dolor")).toBe(!1)});it("should ignore trailing slash on pattern",function(){var e=crossroads.addRoute("/lorem-ipsum/");expect(e.match("/lorem-ipsum")).toBe(!0);expect(e.match("/lorem-ipsum/")).toBe(!0);expect(e.match("/lorem-ipsum/dolor")).toBe(!1)});it("should match params",function(){var e=crossroads.addRoute("/{foo}");expect(e.match("/lorem-ipsum")).toBe(!0);expect(e.match("/lorem-ipsum/")).toBe(!0);expect(e.match("/lorem-ipsum/dolor")).toBe(!1);expect(e.match("lorem-ipsum")).toBe(!0);expect(e.match("/123")).toBe(!0);expect(e.match("/123/")).toBe(!0);expect(e.match("123")).toBe(!0);expect(e.match("123/45")).toBe(!1)});it("should match optional params",function(){var e=crossroads.addRoute(":bar:");expect(e.match("lorem-ipsum")).toBe(!0);expect(e.match("")).toBe(!0);expect(e.match("lorem-ipsum/dolor")).toBe(!1);expect(e.match("/lorem-ipsum/")).toBe(!0)});it("should match normal params and optional params",function(){var e=crossroads.addRoute("/{foo}/:bar:");expect(e.match("/lorem-ipsum")).toBe(!0);expect(e.match("/lorem-ipsum/")).toBe(!0);expect(e.match("/lorem-ipsum/dolor")).toBe(!0);expect(e.match("123/45")).toBe(!0)});it("should work even with optional params on the middle of pattern",function(){var e=crossroads.addRoute("/{foo}/:bar:/{ipsum}");expect(e.match("/123/45/asd")).toBe(!0);expect(e.match("/123/asd")).toBe(!0);var t=crossroads.addRoute("/{foo}:bar:{ipsum}");expect(t.match("/123/45/asd")).toBe(!0);expect(t.match("/123/45")).toBe(!0);var n=crossroads.addRoute("/{foo}:bar:/ipsum");expect(n.match("/123/45/ipsum")).toBe(!0);expect(n.match("/123/ipsum")).toBe(!0);var r=crossroads.addRoute("/{foo}:bar:ipsum");expect(r.match("/123/ipsum")).toBe(!0);expect(r.match("/123/45/ipsum")).toBe(!0)});it("should support multiple consecutive optional params",function(){var e=crossroads.addRoute("/123/:bar:/:ipsum:");expect(e.match("/123")).toBe(!0);expect(e.match("/123/")).toBe(!0);expect(e.match("/123/asd")).toBe(!0);expect(e.match("/123/asd/45")).toBe(!0);expect(e.match("/123/asd/45/")).toBe(!0);expect(e.match("/123/asd/45/qwe")).toBe(!1)});it("should not be case sensitive by default",function(){var e=crossroads.addRoute("foo/bar");expect(e.match("foo")).toBe(!1);expect(e.match("Foo")).toBe(!1);expect(e.match("foo/bar")).toBe(!0);expect(e.match("Foo/Bar")).toBe(!0);expect(e.match("FoO/BAR")).toBe(!0)});it("should be allow toggling case sensitivity",function(){crossroads.ignoreCase=!0;var e=crossroads.addRoute("foo/bar");expect(e.match("foo")).toBe(!1);expect(e.match("Foo")).toBe(!1);expect(e.match("foo/bar")).toBe(!0);expect(e.match("Foo/Bar")).toBe(!0);expect(e.match("FoO/BAR")).toBe(!0)});describe("rest params",function(){it("should support rest params",function(){var e=crossroads.addRoute("/123/{bar}/:ipsum*:");expect(e.match("/123")).toBe(!1);expect(e.match("/123/")).toBe(!1);expect(e.match("/123/asd")).toBe(!0);expect(e.match("/123/asd/45")).toBe(!0);expect(e.match("/123/asd/45/")).toBe(!0);expect(e.match("/123/asd/45/qwe")).toBe(!0);expect(e.match("/456/asd/45/qwe")).toBe(!1)});it("should work even in the middle of pattern",function(){var e=crossroads.addRoute("/foo/:bar*:/edit");expect(e.match("/foo")).toBe(!1);expect(e.match("/foo/")).toBe(!1);expect(e.match("/foo/edit")).toBe(!0);expect(e.match("/foo/asd")).toBe(!1);expect(e.match("/foo/asd/edit")).toBe(!0);expect(e.match("/foo/asd/edit/")).toBe(!0);expect(e.match("/foo/asd/123/edit")).toBe(!0);expect(e.match("/foo/asd/edit/qwe")).toBe(!1)})});describe("query string",function(){it("should match query string as first segment",function(){var e=crossroads.addRoute("{?q}");expect(e.match("")).toBe(!1);expect(e.match("foo")).toBe(!1);expect(e.match("/foo")).toBe(!1);expect(e.match("foo/")).toBe(!1);expect(e.match("/foo/")).toBe(!1);expect(e.match("?foo")).toBe(!0);expect(e.match("?foo=bar")).toBe(!0);expect(e.match("?foo=bar&lorem=123")).toBe(!0)});it("should match optional query string as first segment",function(){var e=crossroads.addRoute(":?q:");expect(e.match("")).toBe(!0);expect(e.match("foo")).toBe(!1);expect(e.match("/foo")).toBe(!1);expect(e.match("foo/")).toBe(!1);expect(e.match("/foo/")).toBe(!1);expect(e.match("?foo")).toBe(!0);expect(e.match("?foo=bar")).toBe(!0);expect(e.match("?foo=bar&lorem=123")).toBe(!0)});it("should match query string as 2nd segment",function(){var e=crossroads.addRoute("{a}{?q}");expect(e.match("")).toBe(!1);expect(e.match("foo")).toBe(!1);expect(e.match("/foo")).toBe(!1);expect(e.match("foo/")).toBe(!1);expect(e.match("/foo/")).toBe(!1);expect(e.match("foo?foo")).toBe(!0);expect(e.match("foo?foo=bar")).toBe(!0);expect(e.match("foo?foo=bar&lorem=123")).toBe(!0)});it("should match optional query string as 2nd segment",function(){var e=crossroads.addRoute("{a}:?q:");expect(e.match("")).toBe(!1);expect(e.match("foo")).toBe(!0);expect(e.match("/foo")).toBe(!0);expect(e.match("foo/")).toBe(!0);expect(e.match("/foo/")).toBe(!0);expect(e.match("foo?foo")).toBe(!0);expect(e.match("foo?foo=bar")).toBe(!0);expect(e.match("foo?foo=bar&lorem=123")).toBe(!0)});it("should match query string as middle segment",function(){var e=crossroads.addRoute("{a}{?q}#{hash}");expect(e.match("")).toBe(!1);expect(e.match("foo")).toBe(!1);expect(e.match("/foo")).toBe(!1);expect(e.match("foo/")).toBe(!1);expect(e.match("/foo/")).toBe(!1);expect(e.match("foo?foo")).toBe(!1);expect(e.match("foo?foo#bar")).toBe(!0);expect(e.match("foo?foo=bar#bar")).toBe(!0);expect(e.match("foo?foo=bar&lorem=123#bar")).toBe(!0)});it("should match optional query string as middle segment",function(){var e=crossroads.addRoute("{a}:?q::hash:");expect(e.match("")).toBe(!1);expect(e.match("foo")).toBe(!0);expect(e.match("/foo")).toBe(!0);expect(e.match("foo/")).toBe(!0);expect(e.match("/foo/")).toBe(!0);expect(e.match("foo?foo")).toBe(!0);expect(e.match("foo?foo=bar")).toBe(!0);expect(e.match("foo?foo=bar#bar")).toBe(!0);expect(e.match("foo?foo=bar&lorem=123")).toBe(!0);expect(e.match("foo?foo=bar&lorem=123#bar")).toBe(!0)});it("should match query string even if not using the special query syntax",function(){var e=crossroads.addRoute("{a}?{q}#{hash}");expect(e.match("")).toBe(!1);expect(e.match("foo")).toBe(!1);expect(e.match("/foo")).toBe(!1);expect(e.match("foo/")).toBe(!1);expect(e.match("/foo/")).toBe(!1);expect(e.match("foo?foo")).toBe(!1);expect(e.match("foo?foo#bar")).toBe(!0);expect(e.match("foo?foo=bar#bar")).toBe(!0);expect(e.match("foo?foo=bar&lorem=123#bar")).toBe(!0)})});describe("slash between params are optional",function(){describe("between required params",function(){it("after other param",function(){var e=crossroads.addRoute("{bar}{ipsum}");expect(e.match("123")).toBe(!1);expect(e.match("123/")).toBe(!1);expect(e.match("123/asd")).toBe(!0);expect(e.match("123/asd/")).toBe(!0);expect(e.match("123/asd/45")).toBe(!1);expect(e.match("123/asd/45/")).toBe(!1);expect(e.match("123/asd/45/qwe")).toBe(!1)})});describe("between optional params",function(){it("optional after other optional param",function(){var e=crossroads.addRoute(":bar::ipsum:");expect(e.match("123")).toBe(!0);expect(e.match("123/")).toBe(!0);expect(e.match("123/asd")).toBe(!0);expect(e.match("123/asd/")).toBe(!0);expect(e.match("123/asd/45")).toBe(!1);expect(e.match("123/asd/45/")).toBe(!1);expect(e.match("123/asd/45/qwe")).toBe(!1)})});describe("mixed",function(){it("between normal + optional",function(){var e=crossroads.addRoute("/{foo}:bar:");expect(e.match("/lorem-ipsum/dolor")).toBe(!0)});it("between normal + optional*2",function(){var e=crossroads.addRoute("/{foo}:bar::ipsum:");expect(e.match("/123")).toBe(!0);expect(e.match("/123/asd")).toBe(!0);expect(e.match("/123/asd/")).toBe(!0);expect(e.match("/123/asd/qwe")).toBe(!0);expect(e.match("/123/asd/qwe/")).toBe(!0);expect(e.match("/123/asd/qwe/asd")).toBe(!1);expect(e.match("/123/asd/qwe/asd/")).toBe(!1)});it("with slashes all",function(){var e=crossroads.addRoute("bar/{foo}/:bar:/:ipsum:");expect(e.match("bar/123")).toBe(!0);expect(e.match("bar/123/")).toBe(!0);expect(e.match("bar/123/asd")).toBe(!0);expect(e.match("bar/123/asd/")).toBe(!0);expect(e.match("bar/123/asd/45")).toBe(!0);expect(e.match("bar/123/asd/45/")).toBe(!0);expect(e.match("bar/123/asd/45/qwe")).toBe(!1)});it("required param after \\w/",function(){var e=crossroads.addRoute("/123/{bar}{ipsum}");expect(e.match("/123")).toBe(!1);expect(e.match("/123/")).toBe(!1);expect(e.match("/123/asd")).toBe(!1);expect(e.match("/123/asd/")).toBe(!1);expect(e.match("/123/asd/45")).toBe(!0);expect(e.match("/123/asd/45/")).toBe(!0);expect(e.match("/123/asd/45/qwe")).toBe(!1)});it("optional params after \\w/",function(){var e=crossroads.addRoute("/123/:bar::ipsum:");expect(e.match("/123")).toBe(!0);expect(e.match("/123/")).toBe(!0);expect(e.match("/123/asd")).toBe(!0);expect(e.match("/123/asd/")).toBe(!0);expect(e.match("/123/asd/45")).toBe(!0);expect(e.match("/123/asd/45/")).toBe(!0);expect(e.match("/123/asd/45/qwe")).toBe(!1)})})});describe("slash is required between word and param",function(){it("required param after \\w",function(){var e=crossroads.addRoute("/123{bar}{ipsum}");expect(e.match("/123")).toBe(!1);expect(e.match("/123/")).toBe(!1);expect(e.match("/123/asd")).toBe(!1);expect(e.match("/123/asd/")).toBe(!1);expect(e.match("/123/asd/45")).toBe(!1);expect(e.match("/123/asd/45/")).toBe(!1);expect(e.match("/123/asd/45/qwe")).toBe(!1);expect(e.match("/123asd")).toBe(!1);expect(e.match("/123asd/")).toBe(!1);expect(e.match("/123asd/45")).toBe(!0);expect(e.match("/123asd/45/")).toBe(!0);expect(e.match("/123asd/45/qwe")).toBe(!1)});it("optional param after \\w",function(){var e=crossroads.addRoute("/123:bar::ipsum:");expect(e.match("/123")).toBe(!0);expect(e.match("/123/")).toBe(!0);expect(e.match("/123/asd")).toBe(!0);expect(e.match("/123/asd/")).toBe(!0);expect(e.match("/123/asd/45")).toBe(!1);expect(e.match("/123/asd/45/")).toBe(!1);expect(e.match("/123/asd/45/qwe")).toBe(!1);expect(e.match("/123asd")).toBe(!0);expect(e.match("/123asd/")).toBe(!0);expect(e.match("/123asd/45")).toBe(!0);expect(e.match("/123asd/45/")).toBe(!0);expect(e.match("/123asd/45/qwe")).toBe(!1)})});describe("strict slash rules",function(){afterEach(function(){crossroads.patternLexer.loose()});it("should only match if traling slashes match the original pattern",function(){crossroads.patternLexer.strict();var e=crossroads.addRoute("{foo}");expect(e.match("foo")).toBe(!0);expect(e.match("/foo")).toBe(!1);expect(e.match("foo/")).toBe(!1);expect(e.match("/foo/")).toBe(!1);var t=crossroads.addRoute("/{foo}");expect(t.match("foo")).toBe(!1);expect(t.match("/foo")).toBe(!0);expect(t.match("foo/")).toBe(!1);expect(t.match("/foo/")).toBe(!1);var n=crossroads.addRoute("");expect(n.match()).toBe(!0);expect(n.match("")).toBe(!0);expect(n.match("/")).toBe(!1);expect(n.match("foo")).toBe(!1);var r=crossroads.addRoute("/");expect(r.match()).toBe(!1);expect(r.match("")).toBe(!1);expect(r.match("/")).toBe(!0);expect(r.match("foo")).toBe(!1)})});describe("loose slash rules",function(){beforeEach(function(){crossroads.patternLexer.loose()});it("should treat single slash and empty string as same",function(){var e=crossroads.addRoute("");expect(e.match()).toBe(!0);expect(e.match("")).toBe(!0);expect(e.match("/")).toBe(!0);expect(e.match("foo")).toBe(!1);var t=crossroads.addRoute("/");expect(t.match()).toBe(!0);expect(t.match("")).toBe(!0);expect(t.match("/")).toBe(!0);expect(t.match("foo")).toBe(!1)})});describe("legacy slash rules",function(){beforeEach(function(){crossroads.patternLexer.legacy()});afterEach(function(){crossroads.patternLexer.loose()});it("should treat single slash and empty string as same",function(){var e=crossroads.addRoute("");expect(e.match()).toBe(!0);expect(e.match("")).toBe(!0);expect(e.match("/")).toBe(!0);expect(e.match("foo")).toBe(!1);var t=crossroads.addRoute("/");expect(t.match()).toBe(!0);expect(t.match("")).toBe(!0);expect(t.match("/")).toBe(!0);expect(t.match("foo")).toBe(!1)});it("slash at end of string is optional",function(){var e=crossroads.addRoute("/foo");expect(e.match("/foo")).toEqual(!0);expect(e.match("/foo/")).toEqual(!0);expect(e.match("/foo/bar")).toEqual(!1)});it("slash at begin of string is required",function(){var e=crossroads.addRoute("/foo");expect(e.match("/foo")).toEqual(!0);expect(e.match("/foo/")).toEqual(!0);expect(e.match("foo")).toEqual(!1);expect(e.match("foo/")).toEqual(!1);expect(e.match("/foo/bar")).toEqual(!1)})});describe("rules",function(){describe("basic rules",function(){it("should allow array options",function(){var e=crossroads.addRoute("/{foo}/{bar}");e.rules={foo:["lorem-ipsum","123"],bar:["DoLoR","45"]};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/DoLoR")).toBe(!0);expect(e.match("/LoReM-IpSuM/DOLoR")).toBe(!0);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/123")).toBe(!1);expect(e.match("/123/45")).toBe(!0)});it("should change array validation behavior when ignoreCase is false",function(){crossroads.ignoreCase=!1;var e=crossroads.addRoute("/{foo}/{bar}");e.rules={foo:["lorem-ipsum","123"],bar:["DoLoR","45"]};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/dolor")).toBe(!1);expect(e.match("/lorem-ipsum/DoLoR")).toBe(!0);expect(e.match("/LoReM-IpSuM/DOLoR")).toBe(!1);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/123")).toBe(!1);expect(e.match("/123/45")).toBe(!0)});it("should allow RegExp options",function(){var e=crossroads.addRoute("/{foo}/{bar}");e.rules={foo:/(^[a-z0-9\-]+$)/,bar:/(.+)/};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/dolor")).toBe(!0);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/45")).toBe(!0)});it("should allow function rule",function(){var e=crossroads.addRoute("/{foo}/{bar}/{ipsum}");e.rules={foo:function(e,t,n){return e==="lorem-ipsum"||e==="123"},bar:function(e,t,n){return t!=="/lorem-ipsum"},ipsum:function(e,t,n){return n.bar==="dolor"&&n.ipsum==="sit-amet"||n.bar==="45"&&n.ipsum==="67"}};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/dolor/sit-amet")).toBe(!0);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/44/55")).toBe(!1);expect(e.match("/123/45/67")).toBe(!0)});it("should work with mixed rules",function(){var e=crossroads.addRoute("/{foo}/{bar}/{ipsum}");e.rules={foo:function(e,t,n){return e==="lorem-ipsum"||e==="123"},bar:["dolor","45"],ipsum:/(sit-amet|67)/};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/dolor/sit-amet")).toBe(!0);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/45/67")).toBe(!0)});it("should only check rules of optional segments if param exists",function(){var e=crossroads.addRoute("/123/:a:/:b:/:c:");e.rules={a:/^\w+$/,b:function(e){return e==="ipsum"},c:["lorem","bar"]};expect(e.match("/123")).toBe(!0);expect(e.match("/123/")).toBe(!0);expect(e.match("/123/asd")).toBe(!0);expect(e.match("/123/asd/")).toBe(!0);expect(e.match("/123/asd/ipsum/")).toBe(!0);expect(e.match("/123/asd/ipsum/bar")).toBe(!0);expect(e.match("/123/asd/45")).toBe(!1);expect(e.match("/123/asd/45/qwe")).toBe(!1);expect(e.match("/123/as#%d&/ipsum")).toBe(!1);expect(e.match("/123/asd/ipsum/nope")).toBe(!1)});it("should work with shouldTypecast=false",function(){var e=crossroads.addRoute("/{foo}/{bar}/{ipsum}");crossroads.shouldTypecast=!1;e.rules={foo:function(e,t,n){return e==="lorem-ipsum"||e==="123"},bar:["dolor","45"],ipsum:/(sit-amet|67)/};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/dolor/sit-amet")).toBe(!0);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/45/67")).toBe(!0)})});describe("query string",function(){it("should validate with array",function(){var e=crossroads.addRoute("/foo.php{?query}");e.rules={"?query":["lorem=ipsum&dolor=456","amet=789"]};expect(e.match("foo.php?bar=123&ipsum=dolor")).toBe(!1);expect(e.match("foo.php?lorem=ipsum&dolor=456")).toBe(!0);expect(e.match("foo.php?amet=789")).toBe(!0)});it("should validate with RegExp",function(){var e=crossroads.addRoute("/foo.php{?query}");e.rules={"?query":/^lorem=\w+&dolor=\d+$/};expect(e.match("foo.php?bar=123&ipsum=dolor")).toBe(!1);expect(e.match("foo.php?lorem=ipsum&dolor=12345")).toBe(!0);expect(e.match("foo.php?lorem=ipsum&dolor=amet")).toBe(!1)});it("should validate with Function",function(){var e=crossroads.addRoute("/foo.php{?query}");crossroads.shouldTypecast=!0;e.rules={"?query":function(e,t,n){return e.lorem==="ipsum"&&typeof e.dolor=="number"}};expect(e.match("foo.php?bar=123&ipsum=dolor")).toBe(!1);expect(e.match("foo.php?lorem=ipsum&dolor=12345")).toBe(!0);expect(e.match("foo.php?lorem=ipsum&dolor=amet")).toBe(!1)})});describe("path alias",function(){it("should work with string pattern",function(){var e=crossroads.addRoute("/{foo}/{bar}/{ipsum}");e.rules={0:["lorem-ipsum","123"],1:function(e,t,n){return t!=="/lorem-ipsum"},2:/^(sit-amet|67)$/};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/dolor/sit-amet")).toBe(!0);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/44/55")).toBe(!1);expect(e.match("/123/45/67")).toBe(!0)});it("should work with RegExp pattern",function(){var e=crossroads.addRoute(/([\-\w]+)\/([\-\w]+)\/([\-\w]+)/);e.rules={0:["lorem-ipsum","123"],1:function(e,t,n){return t!=="/lorem-ipsum"},2:/^(sit-amet|67)$/};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/dolor/sit-amet")).toBe(!0);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/44/55")).toBe(!1);expect(e.match("/123/45/67")).toBe(!0)})});describe("request_",function(){it("should validate whole request",function(){var e=crossroads.addRoute(/^([a-z0-9]+)$/);e.rules={request_:function(e){return e!=="555"}};expect(e.match("lorem")).toBe(!0);expect(e.match("lorem/dolor/sit-amet")).toBe(!1);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("123")).toBe(!0);expect(e.match("555")).toBe(!1)});it("should execute after other rules",function(){var e=crossroads.addRoute("/{foo}/{bar}/{ipsum}");e.rules={foo:function(e,t,n){return e==="lorem-ipsum"||e==="123"},bar:["dolor","45"],ipsum:/(sit-amet|67|555)/,request_:function(e){return e!=="/123/45/555"}};expect(e.match("/lorem-ipsum")).toBe(!1);expect(e.match("/lorem-ipsum/dolor/sit-amet")).toBe(!0);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("/123")).toBe(!1);expect(e.match("123")).toBe(!1);expect(e.match("/123/45/67")).toBe(!0);expect(e.match("/123/45/555")).toBe(!1)});it("can be an array",function(){var e=crossroads.addRoute(/^([a-z0-9]+)$/);e.rules={request_:["lorem","123"]};expect(e.match("lorem")).toBe(!0);expect(e.match("lorem/dolor/sit-amet")).toBe(!1);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("123")).toBe(!0);expect(e.match("555")).toBe(!1)});it("can be a RegExp",function(){var e=crossroads.addRoute(/^([a-z0-9]+)$/);e.rules={request_:/^(lorem|123)$/};expect(e.match("lorem")).toBe(!0);expect(e.match("lorem/dolor/sit-amet")).toBe(!1);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("123")).toBe(!0);expect(e.match("555")).toBe(!1)});it("should work with optional params",function(){var e=crossroads.addRoute(":foo:");e.rules={request_:/^(lorem|123|)$/};expect(e.match("lorem")).toBe(!0);expect(e.match("lorem/dolor/sit-amet")).toBe(!1);expect(e.match("lorem-ipsum")).toBe(!1);expect(e.match("123")).toBe(!0);expect(e.match("555")).toBe(!1);expect(e.match("")).toBe(!0)})});describe("normalize_",function(){it("should ignore normalize_ since it isn't a validation rule",function(){var e=!1,t=crossroads.addRoute("/{foo}/{bar}/{ipsum}");t.rules={foo:function(e,t,n){return e==="lorem-ipsum"||e==="123"},bar:["dolor","45"],ipsum:/(sit-amet|67)/,normalize_:function(){e=!0;return[!0]}};expect(e).toBe(!1);expect(t.match("/lorem-ipsum")).toBe(!1);expect(t.match("/lorem-ipsum/dolor/sit-amet")).toBe(!0);expect(t.match("lorem-ipsum")).toBe(!1);expect(t.match("/123")).toBe(!1);expect(t.match("123")).toBe(!1);expect(t.match("/123/45/67")).toBe(!0)})})})});