/*jshint onevar:false *///for node
var crossroads=crossroads||require("../../../dist/crossroads");describe("crossroads.toString() and route.toString()",function(){beforeEach(function(){crossroads.resetState();crossroads.removeAllRoutes()});describe("crossroads.removeRoute()",function(){it("should remove by reference",function(){var e,t,n,r,i=crossroads.addRoute("/{foo}_{bar}");i.matched.add(function(n,r){e=n;t=r});crossroads.parse("/lorem_ipsum");crossroads.removeRoute(i);crossroads.parse("/foo_bar");expect(e).toBe("lorem");expect(t).toBe("ipsum")})});describe("crossroads.removeAll()",function(){it("should removeAll",function(){var e,t,n,r,i=crossroads.addRoute("/{foo}/{bar}");i.matched.add(function(n,r){e=n;t=r});var s=crossroads.addRoute("/{foo}_{bar}");s.matched.add(function(n,r){e=n;t=r});expect(crossroads.getNumRoutes()).toBe(2);crossroads.removeAllRoutes();expect(crossroads.getNumRoutes()).toBe(0);crossroads.parse("/lorem/ipsum");crossroads.parse("/foo_bar");expect(e).toBeUndefined();expect(t).toBeUndefined();expect(n).toBeUndefined();expect(r).toBeUndefined()})})});